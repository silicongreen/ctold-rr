<% 
  if @all_subject_id.nil?
    @all_subject_id = []
    @has_exam_score = []
    @all_group_exams = GroupedExam.find(
       :all,
       :conditions => [
         "connect_exam_id = ?",
         @connect_exam_obj.id
       ]
     )
    unless @all_group_exams.blank?
     @all_exam_group_id = @all_group_exams.map(&:exam_group_id).uniq


     @all_exams = Exam.find(
        :all,
        :conditions => ["exam_group_id IN (?)", @all_exam_group_id]
      )


      unless @all_exams.blank?
       @all_subject_id = @all_exams.map(&:subject_id).uniq
       @all_exam_id = @all_exams.map(&:id).uniq
       @exam_score_all = ExamScore.find(
          :all,
          :conditions => ["exam_id IN (?)", @all_exam_id]
        )
       @has_exam_score = @exam_score_all.map(&:exam_id).uniq
      end
     end
  end
 
  if @tabulation_data.nil?
    student_response = get_tabulation_connect_exam(@connect_exam_obj.id,@batch.id,false)
    @tabulation_data = []
    if student_response['status']['code'].to_i == 200
      @tabulation_data = student_response['data']
    end
  end


  @grouped_exams = GroupedExam.find_all_by_connect_exam_id(@connect_exam_obj.id)
  @exam_group_ids = @grouped_exams.map(&:exam_group_id)
  @ranked_student = ExamScore.all(:select =>["SUM(exam_scores.marks) as total_score,exam_scores.student_id"],:conditions=>["exams.exam_group_id IN (?)",@exam_group_ids,],:joins=>[:exam,:student,:grading_level],:group =>"exam_scores.student_id",:order=>"total_score DESC")
  @ranked_positions = {}
  unless @ranked_student.blank?
    last_total_score = 0
    p = 0
    @ranked_student.each do |ras|
      ranked_std = true
      @tabulation_data['report']['subjects'].each do |sub|
        if ranked_std == false
          break
        end
        subject_full_mark = 0
        subject_obtain_mark = 0
        subjectdata = Subject.find(sub['id'].to_i)
        check_std_subject = StudentsSubject.find_by_student_id_and_subject_id(ras.student_id,sub['id'].to_i)
        if @all_subject_id.include?(sub['id'].to_i) and (!check_std_subject.blank? or subjectdata.elective_group_id.blank?)
          @tabulation_data['report']['exams'].each do |rs|
              
            check_exam = true
            if !rs['result'].blank? and !rs['result'][rs['exam_id']].blank? and !rs['result'][rs['exam_id']]['exam_id'].blank?
              check_exam = false
              if @has_exam_score.include?(rs['result'][rs['exam_id']]['exam_id'].to_i)
              check_exam = true
              end
            end

            if !rs['result'].blank? and !rs['result'][rs['exam_id']].blank? and !rs['result'][rs['exam_id']][sub['id']].blank? and !rs['result'][rs['exam_id']][sub['id']][ras.student_id.to_s].blank? and check_exam==true
               subject_full_mark = subject_full_mark+rs['result'][rs['exam_id']][sub['id']][ras.student_id.to_s]['full_mark'].to_i
               subject_obtain_mark = subject_obtain_mark+rs['result'][rs['exam_id']][sub['id']][ras.student_id.to_s]['marks_obtained'].to_f
               if @batch.course.course_name == "Level -X"
                 main_mark_sub = 0
                 if rs['result'][rs['exam_id']][sub['id']][ras.student_id.to_s]['full_mark'].to_i > 0 && s['result'][rs['exam_id']][sub['id']][ras.student_id.to_s]['marks_obtained'].to_i > 0
                  main_mark_sub = (rs['result'][rs['exam_id']][sub['id']][ras.student_id.to_s]['marks_obtained'].to_f/rs['result'][rs['exam_id']][sub['id']][ras.student_id.to_s]['full_mark'].to_f)*100
                 end 
                 grade = GradingLevel.percentage_to_grade(main_mark_sub, @batch.id)
                 if !grade.blank? and !grade.name.blank?
                   if grade.name == "F"
                     ranked_std = false
                   end
                 end
               end  
            end
             
          end
          if subject_full_mark>0
            main_mark = (subject_obtain_mark.to_f/subject_full_mark.to_f)*100
            grade = GradingLevel.percentage_to_grade(main_mark, @batch.id)
            if !grade.blank? and !grade.name.blank? and grade.name == "F"
              ranked_std = false
              break
            end
          end
        end
      end
      if ranked_std == true
        if ras.total_score != last_total_score
          p = p+1
          last_total_score = ras.total_score
        end
        @ranked_positions[ras.student_id.to_i] = p
      end
    end
  end
  
%>
<%= render  :partial=>"/connect_exam/mirpur_english/group_report_pdf_type_"+@connect_exam_obj.result_type.to_s %>