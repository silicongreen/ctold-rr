<%-# Champs21
#Copyright 2010 teamCreative Private Limited
#
#This product includes software developed at
#Project Champs21 - http://www.champs21.com/
#
#Licensed under the Apache License, Version 2.0 (the "License");
#you may not use this file except in compliance with the License.
#You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
#Unless required by applicable law or agreed to in writing,
#software distributed under the License is distributed on an
#"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
#KIND, either express or implied.  See the License for the
#specific language governing permissions and limitations
#under the License. -%>

<div id="content-header">
<%= show_header_icon %>
  <h1><%= t('class_timing_sets') %></h1>
<div class='header-sep'>|</div>
<div class='sub-header'><%= t('manage_class_timing_sets') %></div>

<div id="inner-tab-menu">
  <ul>
    <li class='themed_bg themed-dark-hover-background'><%= link_to "#{t('class_timing_sets')}", class_timing_sets_path %></li>
  </ul>
</div>

</div>
<div id="page-yield">
  <% unless flash[:notice].nil? %>
    <p class="flash-msg"> <%= flash[:notice] %> </p>
  <% end %>

  <div class="label-field-pair">
    <label ><%= t('class_timing_set') %>:</label>
    <div class="text-input-bg">
      <%= select :batch_class_timing_set, :class_timing_set_id,
        @class_timing_sets.map {|cts| [cts.name, cts.id] },
        {:prompt => "#{t('select_a_class_timing_set')}"},
        {:onchange => "#{remote_function(
        :url =>  list_batches_class_timing_sets_url,
        :with => "'class_timing_set_id='+value",
        :before => "Element.show('loader')",
        :success => "Element.hide('loader')"
        )}"} %>
      <%= image_tag("loader.gif", :align => "absmiddle", :border => 0, :id => "loader", :style =>"display: none;" ) %>
    </div>
  </div>
  <div id="list_batches">
  </div>
</div>

<script type="text/javascript">
  function select_assigned_all_or_none(checkbox)
  {
    if(checkbox.checked == true)
    {
      $$('input.assigned_batches_check').each(function(checkbox) { checkbox.checked = true; });
    }
    else
    {
      $$('input.assigned_batches_check').each(function(checkbox) { checkbox.checked = false; });
    }
  }

  function select_available_all_or_none(checkbox)
  {
    if(checkbox.checked == true)
    {
      $$('input.all_batches_check').each(function(checkbox) { checkbox.checked = true; });
    }
    else
    {
      $$('input.all_batches_check').each(function(checkbox) { checkbox.checked = false; });
    }
  }

  function update_assigned()
  {
    var flag = 0;
    $$('input.all_batches_check').each(function(checkbox)
    {
      if(checkbox.checked == true)
      {
        flag = 1;
      }
    })
    if(flag == 0)
    {
      $("select_all").checked = false;
    }
    else
    {
      $("select_all").checked = true;
    }

  }

  function update_available()
  {
    var flag = 0;
    $$('input.available_batches_check').each(function(checkbox)
    {
      if(checkbox.checked == true)
      {
        flag = 1;
      }
    })
    if(flag == 0)
    {
      $("select_all_available").checked = false;
    }
    else
    {
      $("select_all_available").checked = true;
    }
  }

  function add_batch_class_timing_set(class_timing_set_id)
  {
    var batch_ids = new Array;
    $$('input.all_batches_check').each(function(checkbox)
    {
      if(checkbox.checked == true)
      {
        Array.prototype.push.call(batch_ids, checkbox.value);
      }
    });
    Element.show('loader1');
    new Ajax.Request('/class_timing_sets/add_batch', {
      method: 'post',
      onSuccess:function(request){Element.hide('loader1')},
      parameters: {
        add_batch_ids: batch_ids.toString(),
        class_timing_set_id: class_timing_set_id.toString()
      }
    });
  }

  function remove_batch_class_timing_set(class_timing_set_id)
  {
    var batch_ids = new Array;
    
    $$('input.assigned_batches_check').each(function(checkbox)
    {
      if(checkbox.checked == true)
      {
        Array.prototype.push.call(batch_ids, checkbox.value);
      }
    });
    Element.show('loader1');
    new Ajax.Request('/class_timing_sets/remove_batch', {
      method: 'post',
      onSuccess:function(request){Element.hide('loader1')},
      parameters: {
        remove_batch_ids: batch_ids.toString(),
        class_timing_set_id: class_timing_set_id.toString()
      }
    });
  }
</script>
