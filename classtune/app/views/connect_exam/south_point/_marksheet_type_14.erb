<%-# Champs21
#Copyright 2010 teamCreative Private Limited
#
#This product includes software developed at
#Project Champs21 - http://www.champs21.com/
#
#Licensed under the Apache License, Version 2.0 (the "License");
#you may not use this file except in compliance with the License.
#You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
#Unless required by applicable law or agreed to in writing,
#software distributed under the License is distributed on an
#"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
#KIND, either express or implied.  See the License for the
#specific language governing permissions and limitations
#under the License. -%>
<div id="page-yield" class="available_sections1">
  <div class="page1"> </div>
  <div class="section1 row" >
    <center>
      <h3 align="center">Mark Sheet</h3>
      <div class="hor_line"></div>
      <h4 align="center">For Subject Teacher</h4>
      
      <div id ="main_info">
          <table width="100%">
              <tr>
                 <% if !@employee.nil? %> 
                  <td align='left'><h4>Teacher's Name : <%=  @employee.full_name %></h4></td>
                  <td align='center'><h4>Subject : <%= @subject.name %></h4></td>
                 <% else %>
                  <td align='left'><h4>Subject : <%= @subject.name %></h4></td>
                 <% end %> 
                  
                  <td align='center'><h4>Class : <%= (@batch.name=="General")?"":@batch.name+" " %><%= @batch.course.course_name %></h4></td>
                  <td align='right'><h4>Section : <%= @batch.course.section_name %></h4></td>
              </tr>    
          </table>    
       
      </div>
      <% unless @report_data.blank?  or  @report_data['result'].blank? %>
      <% c = 'even' %>
      <% full_mark = 0 %>
      <% colspan = 0 %>
      <table id="pdf-table" width="100%" cellspacing="0">
        <tr class="table-header">
          <td class="name">Roll NO.</td>
          <td class="name">Name</td>
          <td>1<sup>st</sup> Quarter (30/15)</td>
          <td>2<sup>nd</sup> Quarter (30/15)</td>
          <td>Half Yearly (40/20)</td>
          <td>Full Mark</td>
          <td>Total Obtain</td>
          <td>Grade</td>
        
        </tr>
        
        <% extender = 0 %>
        <% std_count = 0 %>
        <% unless @report_data['result']['al_students'].blank? %>
        <% @report_data['result']['al_students'].each do |std| %>
          <%  std_count = std_count+1; %>
          <% if std_count>14 && extender ==0 %>
              <% std_count = 0 %>
              <% extender = 1 %>
              <tr class="page-break">
                  <td colspan="100">&nbsp;</td>
              </tr>    
          <% elsif std_count>20 && extender ==1 %>
              <% std_count = 0 %>
              <% extender = 1 %>
              <tr class="page-break">
                  <td colspan="100">&nbsp;</td>
              </tr> 
          <% end %> 
         
          <% if @subject.no_exams == true %>
           <tr class="<%= cycle(c,(["odd","even"]-[c]).first) %>">
            <td class="name"><%= std['class_roll_no'] %></td>
            <td class="no-warp"><%= std['name'] %></td> 
            <td class="col-pdf" colspan="5">-</td>
            <% @comment_std = ExamConnectSubjectComment.find_by_student_id_and_exam_connect_id_and_subject_id(std['id'].to_i,@connect_exam_obj.id,@subject.id) %>
            
            <td class="col-pdf"><%= @comment_std.comments unless @comment_std.blank? %></td>
           </tr> 
          <% else %>
        
        
          <% total_mark = 0 %>
          <tr class="<%= cycle(c,(["odd","even"]-[c]).first) %>">
            <td class="name"><%= std['class_roll_no'] %></td>
            <td class="name-std"><%= std['name'] %></td>
            <% obtained_mark = 0 %>
            <% full_mark = 0 %>
            <% highest_mark = 0 %>


            <% st_full_mark1 = 0 %>
            <% ct_full_mark1 = 0 %>

            <% st_marks1 = [] %>
            <% ct_marks1 = [] %>
            <% avg_mark_st1 = 0; %>
            <% avg_mark_ct1 = 0; %>
            <% full_mark1 = 0 %>

            <% st_full_mark2 = 0 %>
            <% ct_full_mark2 = 0 %>

            <% st_marks2 = [] %>
            <% ct_marks2 = [] %>
            <% avg_mark_st2 = 0; %>
            <% avg_mark_ct2 = 0; %>
            <% full_mark2 = 0 %>

            <% first_term_mark = 0 %>
            <% first_term_ab = false %>
            <% first_term_full_mark = 0 %>
            <% first_term_avg_mark = 0 %>
            
            
            
            <% 
                 @report_data['result']['ALL'].each do |report| 
                   
                    #Calculation First Quarter Mark
                     if report['quarter'] == '1'
                        if st_full_mark1 == 0 and report['exam_category'] == '4'
                          if !report['maximum_marks'].blank?
                            st_full_mark1 = report['maximum_marks'].to_i
                          end
                          
                        end 
                        if report['exam_category'] == '4'
                          if !report['students'].blank? && !report['students'][std['id']].blank? && !report['students'][std['id']]['score'].blank?
                            st_marks1 << report['students'][std['id']]['score'].to_f
                          else
                            st_marks1 << 0
                          end
                        end
                      
                        if ct_full_mark1 == 0 and report['exam_category'] == '1'
                          if !report['maximum_marks'].blank?
                            ct_full_mark1 = report['maximum_marks'].to_i
                          end
                        end
                        
                        if report['exam_category'] == '1'
                          if !report['students'].blank? && !report['students'][std['id']].blank? && !report['students'][std['id']]['score'].blank?
                            ct_marks1 << report['students'][std['id']]['score'].to_f
                          else
                            ct_marks1 << 0
                          end
                        end

                     end 
                   
                     #Calculation 2nd Quarter Mark
                     if report['quarter'] == '2'
                        if st_full_mark2 == 0 and report['exam_category'] == '4'
                          if !report['maximum_marks'].blank?
                            st_full_mark2 = report['maximum_marks'].to_i
                          end
                          
                        end
                      
                        if ct_full_mark2 == 0 and report['exam_category'] == '1'
                          if !report['maximum_marks'].blank?
                            ct_full_mark2 = report['maximum_marks'].to_i
                          end
                          
                        end
                      
                        if report['exam_category'] == '4'
                          if !report['students'].blank? && !report['students'][std['id']].blank? && !report['students'][std['id']]['score'].blank?
                            st_marks2 << report['students'][std['id']]['score'].to_f
                          else
                            st_marks2 << 0
                          end
                        end
                      
                        if report['exam_category'] == '1'
                          if !report['students'].blank? && !report['students'][std['id']].blank? && !report['students'][std['id']]['score'].blank?
                            ct_marks2 << report['students'][std['id']]['score'].to_f
                          else
                            ct_marks2 << 0
                          end
                        end

                     end  

                     #Calculation First Term (40/20) Mark
                     if report['quarter'] == '5'
                       first_term_full_mark_main = 0
                       if !report['maximum_marks'].blank?
                          first_term_full_mark_main = first_term_full_mark = report['maximum_marks'].to_i
                          if(first_term_full_mark == 100 or st_full_mark1.to_i == 10 )
                            first_term_full_mark = 40
                          else
                            first_term_full_mark = 20
                          end
                       end
                       if !report['students'].blank? && !report['students'][std['id']].blank? && !report['students'][std['id']]['score'].blank?
                          first_term_mark = report['students'][std['id']]['score'].to_f
                       else
                          first_term_ab = true
                       end
                       unless first_term_ab == true
                          if first_term_full_mark == 40
                            first_term_mark = (first_term_mark/first_term_full_mark_main)*40
                          else
                            first_term_mark = (first_term_mark/first_term_full_mark_main)*20
                          end
                        end

                     end
                end 
              
                #Calculation First Quarter Mark
                #Calculation First Quarter Mark
                st_marks1.sort! {|x,y| y <=> x }
                ct_marks1.sort! {|x,y| y <=> x }

                avg_mark_ct1 = ct_marks1[0].to_f
                if st_full_mark1.to_i == 10 
                  avg_mark_st1 = (st_marks1[0].to_f+st_marks1[1].to_f)/2
                else
                  avg_mark_st1 = st_marks1[0].to_f
                end

                obtained_mark1 = avg_mark_ct1.to_f+avg_mark_st1.to_f
                full_mark1 = ct_full_mark1.to_i+st_full_mark1.to_i

                #Calculation 2nd Quarter Mark
                st_marks2.sort! {|x,y| y <=> x }
                ct_marks2.sort! {|x,y| y <=> x }

                avg_mark_ct2 = ct_marks2[0].to_f
                if st_full_mark2.to_i == 10 
                  avg_mark_st2 = (st_marks2[0].to_f+st_marks2[1].to_f)/2
                else
                  avg_mark_st2 = st_marks2[0].to_f
                end


                obtained_mark2 = avg_mark_ct2.to_f+avg_mark_st2.to_f
                full_mark2 = ct_full_mark2.to_i+st_full_mark2.to_i

                #Calculation First Term (40/20) Mark
                full_mark = full_mark1+full_mark2+first_term_full_mark
                obtained_mark = obtained_mark1.round()+obtained_mark2.round()+first_term_mark.round()
                main_mark = (obtained_mark.to_f/full_mark.to_f)*100
            %> 
              
            <td><%= obtained_mark1.round().to_s %></td>
            <td><%= obtained_mark2.round().to_s %></td>
            <td><%= (first_term_ab == true)?"AB":first_term_mark.round().to_s %></td>
            <td><%= full_mark.to_i  %></td>
            <td><%= obtained_mark.round().to_s %></td>
            <%  grade = GradingLevel.percentage_to_grade(main_mark, @batch.id) %>
            <% if !grade.blank? and !grade.name.blank? %>
                <td><b><%= grade.name %></b></td>
            <% else %>
                <td><b>-</b></td>
            <% end %>
        </tr>
          <% end %>
        <% end %>
        <% end %>
      </table>
      <% end %>
    </center>
  </div>
  
  
</div>
